TODO HOMEWORK CHECKLIST:
PROGRAMMING TASKS:
    SongDatabase.java
        [X] Complete the 'addSong' method
        [X] Throw an IllegalArgumentException when a playlist of the given name already exists in the 'createPlaylist' method
        [X] Complete the 'getPlaylist' method
        [X] Complete the 'addSongToPlaylist' method
        [X] Complete the 'findSongByName' method
        [X] Complete the 'findSongByArtist' method
    MP3Player.java
        [X] Run the 'main' method and try multiple work flows

TEST TASKS:
    SongDatabaseTest.java
        [X] Write the 'testAddDeleteSong' test method
        [X] Write the 'testAddGetDeletePlaylist' test method
        [X] Run every other test

SHORT ANSWERS:
    // TODO FOR HOMEWORK: Answer each question, and note many don't have a 'right answer' so just answer honestly
    [X] The MP3Player is a console application, what features do you wish were added?
        // ANSWER HERE: Previous Song, Loop Songs in a playlist

    [X] Pick any feature you mentioned in the last question. Do you think you could implement that feature with your current knowledge? If yes explain the basic thought processing of adding that feature, if not explain why.
        // ANSWER HERE: Loop Song in a playlist. implemented in MP3Player.playPlaylist. song removed from the queue will the added back at the end.
                        Tried already! see code.
    [X] What is a loop?
        // ANSWER HERE: Runs the same code multiple times, each time with a different value.

    [X] Write what each of these loops does in your own words:
        // FOR LOOP: loops through a code block in a specified number of times
        // WHILE LOOP: Check the conditional statement before looping through a code block
        // DO WHILE: loops through a code block before checking the conditional statement

    [X] Why were 'infinite loops' used in this project? (See UserHelperMethods.displayOptionsAndWaitForValidOption(String[] options) for a reference)
        // ANSWER HERE: An infinite to ensure the user selects a valid option. And also to not end the program immediately. end only when user selects.

    [X] This project has 3 packages (models, resources, and utils). Describe each one.
        // MODELS: Contains specific codes for each component of the program
        // RESOURCES: Contains hard coded configurations (easy modification and extensibility)
        // UTILS: Reusable function that can be used through out the program